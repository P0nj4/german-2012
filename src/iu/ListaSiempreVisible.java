/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ListaSiempreVisible.java
 *
 * Created on 30-jul-2012, 18:53:32
 */
package iu;

import dominio.Asignacion;
import dominio.Muelle;
import dominio.Vehiculo;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import logicaDeNegocio.Fachada;
import utilidades.enums.EstadoDeAsignacion;

/**
 *
 * @author German
 */
public class ListaSiempreVisible extends JInternalBaseClass implements utilidades.IObservador {

    ArrayList muelles = null;
    Muelle lastMuelle = null;

    /** Creates new form ListaSiempreVisible */
    public ListaSiempreVisible() {
        initComponents();
        try {
            Fachada.getInstance().agregarObservadorDeMuelles(this);
            ddlMuelles.removeAllItems();
            ddlMuelles.addItem("Seleccionar");
            muelles = Fachada.getInstance().listarMuelles();
            for (int i = 0; i < muelles.size(); i++) {
                ddlMuelles.addItem(muelles.get(i).toString());
            }
            actualizarTablar();


        } catch (Exception ex) {
            msgBoxError(ex.getMessage());
        }
    }

    private void actualizarTablar() {
        try {
            if (ddlMuelles.getSelectedIndex() > 0) {

                Muelle m = (Muelle) muelles.get(ddlMuelles.getSelectedIndex() - 1);

                DefaultTableModel modelo = (DefaultTableModel) tabla.getModel();
                while (modelo.getRowCount() > 0) {
                    modelo.removeRow(0);
                }

                for (int i = 0; i < m.getAsignaciones().size(); i++) {
                    Asignacion a = (Asignacion) m.getAsignaciones().get(i);

                    EstadoDeAsignacion o = utilidades.enums.EstadoDeAsignacion.values()[a.getEstado() - 1];
                    Vehiculo v = (Vehiculo) a.getVehiculo();
                    Object[] row = {v.getMatricula(), v.getMarca(), v.getModelo(), o.toString()};
                    modelo.addRow(row);
                }
                lastMuelle = m;
            }
        } catch (Exception ex) {
            this.msgBoxError("Hubo un error");
            this.closeWindow();
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        ddlMuelles = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();

        jLabel1.setText("Muelle");

        ddlMuelles.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        ddlMuelles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ddlMuellesActionPerformed(evt);
            }
        });

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Matricula", "Modelo", "Marca", "Estado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabla);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ddlMuelles, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(ddlMuelles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(110, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void ddlMuellesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ddlMuellesActionPerformed
    actualizarTablar();
}//GEN-LAST:event_ddlMuellesActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox ddlMuelles;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabla;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actualizar() {
        try {
            int selected = ddlMuelles.getSelectedIndex();
            //Fachada.getInstance().agregarObservadorDeMuelles(this);
            ddlMuelles.removeAllItems();
            ddlMuelles.addItem("Seleccionar");
            muelles = Fachada.getInstance().listarMuelles();
            for (int i = 0; i < muelles.size(); i++) {
                ddlMuelles.addItem(muelles.get(i).toString());
            }
            ddlMuelles.setSelectedIndex(selected);
        } catch (Exception ex) {
            Logger.getLogger(ListaSiempreVisible.class.getName()).log(Level.SEVERE, null, ex);
        }
            
        actualizarTablar();
    }
}
